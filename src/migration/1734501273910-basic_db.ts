import { MigrationInterface, QueryRunner } from "typeorm";

export class BasicDb1734501273910 implements MigrationInterface {
    name = 'BasicDb1734501273910'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "oem" ("id" SERIAL NOT NULL, "name" character varying NOT NULL, "country" character varying NOT NULL, "founded_year" TIMESTAMP NOT NULL, "contact_information" character varying NOT NULL, "website" character varying NOT NULL, CONSTRAINT "PK_ae51876d163064f7eed0caed5dd" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "vehicle_segment" ("id" SERIAL NOT NULL, "name" character varying NOT NULL, "description" character varying, CONSTRAINT "PK_11f8ee3c02529fb393f665ca4e3" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "vehicle_version" ("id" SERIAL NOT NULL, "name" character varying NOT NULL, "price" integer NOT NULL, "features" character varying, CONSTRAINT "PK_dc6b011541904b9eda8abb6a825" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "vehicle_sub_model" ("id" SERIAL NOT NULL, "name" character varying NOT NULL, "engine_capacity" character varying NOT NULL, "fuel_efficiency" character varying NOT NULL, "vehicle_model_id" integer, "vehicle_version_id" integer, CONSTRAINT "PK_96847565666288c6d9caf94e80a" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "vehicle_model" ("id" SERIAL NOT NULL, "name" character varying NOT NULL, "launch_year" TIMESTAMP NOT NULL, "discontinued_year" TIMESTAMP, "oem_id" integer, "vehicle_version_id" integer, "vehicle_segment_id" integer, CONSTRAINT "PK_557870ce4ace117b16a56c42bda" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "vehicle_owner" ("id" SERIAL NOT NULL, "name" character varying NOT NULL, "email" character varying NOT NULL, "phone_number" character varying NOT NULL, "address" character varying NOT NULL, "purchase_date" TIMESTAMP NOT NULL, CONSTRAINT "PK_ac9360a2c16ec48e49e08e40d2c" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "vehicle_parts_replacement" ("id" SERIAL NOT NULL, "part_name" character varying NOT NULL, "part_number" character varying NOT NULL, "replacement_date" TIMESTAMP NOT NULL, "cost" integer NOT NULL, "warranty_expiry" TIMESTAMP NOT NULL, "replaced_by" character varying NOT NULL, "vehicle_id" integer, CONSTRAINT "PK_6169159d005776aba565ac00097" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "dealer" ("id" SERIAL NOT NULL, "name" character varying NOT NULL, "location" character varying NOT NULL, "contact_information" jsonb, CONSTRAINT "PK_1bd6073e224f6c22ff1d5827add" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "vehicle" ("id" SERIAL NOT NULL, "vin" character varying NOT NULL, "engine_number" character varying NOT NULL, "vehicle_number" character varying NOT NULL, "color" character varying NOT NULL, "manufacture_year" integer NOT NULL, "transmission_type" character varying NOT NULL, "mileage" integer NOT NULL, "vehicle_model_id" integer, "vehicle_sub_id" integer, "vehicle_segment_id" integer, "vehicle_version_id" integer, "vehicle_owner_id" integer, "dealer_id" integer, CONSTRAINT "UQ_960e864037056a9e38cb4277bdd" UNIQUE ("vin"), CONSTRAINT "UQ_1610f0d6f95af679546007ffee1" UNIQUE ("engine_number"), CONSTRAINT "PK_187fa17ba39d367e5604b3d1ec9" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "vehicle_insurance" ("id" SERIAL NOT NULL, "policy_number" character varying NOT NULL, "provider_name" character varying NOT NULL, "start_date" TIMESTAMP NOT NULL, "end_date" TIMESTAMP NOT NULL, "coverage_details" jsonb, "vehicle_id" integer, CONSTRAINT "PK_d97238c7cf1c63ee0ff6ab1b311" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."dongle_status_enum" AS ENUM('Available', 'Assigned', 'Defective')`);
        await queryRunner.query(`CREATE TABLE "dongle" ("id" SERIAL NOT NULL, "dongle_serial_number" character varying, "mac_address" character varying, "model" character varying, "manufacture_date" TIMESTAMP, "firmware_version" character varying, "status" "public"."dongle_status_enum" DEFAULT 'Available', "firmware_updated_at" TIMESTAMP, "created_at" TIMESTAMP DEFAULT now(), "updated_at" TIMESTAMP DEFAULT now(), CONSTRAINT "UQ_fa876d6d55aad75f8a4a64be54e" UNIQUE ("mac_address"), CONSTRAINT "PK_3a6bac875b9c23209433f8381e1" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."device_status_enum" AS ENUM('Active', 'Inactive', 'Suspended')`);
        await queryRunner.query(`CREATE TABLE "device" ("id" SERIAL NOT NULL, "device_name" character varying, "device_type" character varying, "imei" character varying, "os_version" character varying, "serial_number" character varying, "dongle_conn_status" boolean DEFAULT true, "registration_date" TIMESTAMP DEFAULT now(), "status" "public"."device_status_enum" DEFAULT 'Active', "created_at" TIMESTAMP DEFAULT now(), "updated_at" TIMESTAMP DEFAULT now(), "dongle_id" integer, "assigned_to" integer, CONSTRAINT "UQ_82f62b91e2fcf2a44cf859cbfd1" UNIQUE ("imei"), CONSTRAINT "UQ_c7f756679d925ed3d51af6cb8f2" UNIQUE ("serial_number"), CONSTRAINT "REL_4e45895a2aec400786bb56ed0a" UNIQUE ("dongle_id"), CONSTRAINT "REL_c0ab4ca240cd2b5148d0b1868e" UNIQUE ("assigned_to"), CONSTRAINT "PK_2dc10972aa4e27c01378dad2c72" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."permission_type_enum" AS ENUM('user', 'product')`);
        await queryRunner.query(`CREATE TABLE "permission" ("id" SERIAL NOT NULL, "name" character varying(64) NOT NULL, "description" character varying(64), "type" "public"."permission_type_enum", CONSTRAINT "PK_3b8b97af9d9d8807e41e6f48362" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "role" ("id" SERIAL NOT NULL, "name" character varying(64) NOT NULL, "description" character varying(64), "created_by" integer, CONSTRAINT "UQ_1d44d2e349a8ca6f024d716c10b" UNIQUE ("name", "created_by"), CONSTRAINT "PK_b36bcfe02fc8de3c57a8b2391c2" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."service_ticket_status_enum" AS ENUM('open', 'closed', 'new')`);
        await queryRunner.query(`CREATE TABLE "service_ticket" ("id" SERIAL NOT NULL, "date" TIMESTAMP NOT NULL DEFAULT now(), "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "status" "public"."service_ticket_status_enum" NOT NULL DEFAULT 'new', "active" boolean DEFAULT false, "service_ticket_number" character varying(17) NOT NULL, "technician_id" integer NOT NULL, CONSTRAINT "REL_158977193099c0625411d5d208" UNIQUE ("technician_id"), CONSTRAINT "PK_ce829d561a217cafc769fcd8de6" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "trip" ("id" SERIAL NOT NULL, "startLatitude" double precision NOT NULL, "startLongitude" double precision NOT NULL, "endLatitude" double precision NOT NULL, "endLongitude" double precision NOT NULL, "tariff" double precision NOT NULL, "paymentStatus" character varying NOT NULL DEFAULT 'unpaid', "timestamp" TIMESTAMP NOT NULL DEFAULT now(), "user_id" integer, CONSTRAINT "PK_714c23d558208081dbccb9d9268" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "parameters" ("id" SERIAL NOT NULL, "name" character varying(255), "description" character varying(500), "active" boolean NOT NULL DEFAULT true, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_6b03a26baa3161f87fa87588859" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "pid" ("id" SERIAL NOT NULL, "pid_code" character varying(255), "long_name" character varying(255), "description" character varying(500), "short_name" character varying(255), "active" boolean NOT NULL DEFAULT true, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "total_length" integer, "byte_position" integer, "length_bytes" integer, "bit_coded" boolean NOT NULL DEFAULT false, "resolution" double precision, "offset" double precision, "min" double precision, "max" double precision, "read" boolean NOT NULL DEFAULT false, "write" boolean NOT NULL DEFAULT false, "unit" character varying(50), CONSTRAINT "PK_a5d41ad8c45b092c093afb4a227" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "message" ("id" SERIAL NOT NULL, "name" character varying(255), "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_ba01f0a3e0123651915008bc578" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "pid_dataset" ("id" SERIAL NOT NULL, "name" character varying(255), "description" character varying(500), "active" boolean NOT NULL DEFAULT true, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_93cc7dbec49555c4f822c649bd5" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "dtc" ("id" SERIAL NOT NULL, "name" character varying(255), "description" character varying(255), "is_active" boolean NOT NULL DEFAULT true, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_3dc68f9057c76aaedb27a9fbb64" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "dtc_dataset" ("id" SERIAL NOT NULL, "name" character varying(255), "description" character varying(255), "is_active" boolean NOT NULL DEFAULT true, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_bb8f744d495929b0b44fd32dca9" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "negative_response_codes" ("id" SERIAL NOT NULL, "response_code" character varying(255) NOT NULL, "description" text, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_4e097655f8f8f89f1750b374582" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "ecu_management" ("id" SERIAL NOT NULL, "is_active" boolean NOT NULL DEFAULT true, "mac_id" character varying(255), "ecu_name" character varying(255), "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "protocol" character varying(255), "rx_header" character varying(255), "tx_header" character varying(255), "read_dtc_fc_index" character varying(255), "clear_dtc_fn_index" character varying(255), "read_data_fn_index" character varying(255), "write_data_fn_index" character varying(255), "seedkey_algo_fn_index" character varying(255), "ior_test_index" character varying(255), "firmware_id" integer, CONSTRAINT "PK_d56a0899905c4b11d8fd7ae2444" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."file_file_type_enum" AS ENUM('FSQ', 'JSON', 'BIN')`);
        await queryRunner.query(`CREATE TABLE "file" ("id" SERIAL NOT NULL, "file" character varying(255), "file_name" character varying(255), "file_description" character varying(255), "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "is_active" boolean NOT NULL DEFAULT true, "file_type" "public"."file_file_type_enum" NOT NULL, "user_id" integer, "firmware_id" integer, CONSTRAINT "PK_36b46d232307066b3a2c9ea3a1d" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."firmware_management_firmware_type_enum" AS ENUM('DEVOTA', 'FOTA')`);
        await queryRunner.query(`CREATE TABLE "firmware_management" ("id" SERIAL NOT NULL, "firmware_version" character varying(255), "firmware_type" "public"."firmware_management_firmware_type_enum" NOT NULL, "created_by" integer, CONSTRAINT "PK_6f928aa7223a067fe597c78791d" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "user" ("id" SERIAL NOT NULL, "name" character varying(64) NOT NULL, "password" character varying(16) NOT NULL, "address" character varying(64) NOT NULL, "phone_number" character varying(64) NOT NULL, "email" character varying(64) NOT NULL, "device_id" integer, "role_id" integer, CONSTRAINT "REL_0232591a0b48e1eb92f3ec5d0d" UNIQUE ("device_id"), CONSTRAINT "PK_cace4a159ff9f2512dd42373760" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "tracking_packet" ("id" SERIAL NOT NULL, "startCharacter" character varying(1), "version" character varying(50), "packetHeader" character varying(50), "vendorId" character varying(50), "firmwareVersion" character varying(50), "packetType" character varying(50), "messageId" integer, "packetStatus" character varying(50), "imei" character varying(15), "vehicleRegNo" character varying(20), "gpsFix" integer, "date" character varying(50), "time" character varying(50), "latitude" double precision, "latitudeDir" character varying(50), "longitude" double precision, "longitudeDir" character varying(50), "speed" double precision, "heading" double precision, "noOfSatellites" integer, "altitude" integer, "pdop" double precision, "hdop" double precision, "networkOperatorName" character varying(50), "ignitionStatus" integer, "mainPowerStatus" integer, "mainInputVoltage" double precision, "internalBatteryVoltage" double precision, "emergencyStatus" integer, "tamperAlert" character varying(50), "gsmSignalStrength" integer, "mccServing" integer, "mncServing" integer, "lacServing" character varying(50), "cellIdServing" character varying(50), "gsmSignalStrengthNmr1stNeighbour" integer, "lacNmr1stNeighbour" character varying(50), "cellIdNmr1stNeighbour" character varying(50), "gsmSignalStrengthNmr2ndNeighbour" integer, "lacNmr2ndNeighbour" character varying(50), "cellIdNmr2ndNeighbour" character varying(50), "gsmSignalStrengthNmr3rdNeighbour" integer, "lacNmr3rdNeighbour" character varying(50), "cellIdNmr3rdNeighbour" character varying(50), "gsmSignalStrengthNmr4thNeighbour" integer, "lacNmr4thNeighbour" character varying(50), "cellIdNmr4thNeighbour" character varying(50), "digitalInputStatus" character varying(50), "digitalOutputStatus" character varying(50), "frameNumber" integer, "analogInput1" double precision, "analogInput2" double precision, "deltaDistance" integer, "otaResponse" character varying(50), "endCharacter" character varying(50), "checksum" character varying(20), CONSTRAINT "PK_c8b8858cc7b31ef080972a683c5" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "geofence" ("id" SERIAL NOT NULL, "polygon" geometry(Polygon,4326) NOT NULL, "name" character varying NOT NULL, CONSTRAINT "PK_773a4bb65bbd7e4dbbc21ac1b0b" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "health_monitoring_packet" ("id" SERIAL NOT NULL, "header" character varying(50), "vendorId" character varying(50), "version" character varying(50), "firmwareVersion" character varying(50), "imei" character varying(50), "batteryPercentage" integer, "lowBatteryThresholdPercentage" integer, "memoryPercentage1" double precision, "memoryPercentage2" double precision, "dataUpdateRateWhenIgnitionOn" integer, "dataUpdateRateWhenIgnitionOff" integer, "digitalInputStatus" character varying(50), "analogInput1Status" double precision, "analogInput2Status" double precision, "checksum" character varying(50), CONSTRAINT "PK_ef0dbfcad89122ab18a692b2ef4" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "login_packet" ("id" SERIAL NOT NULL, "packetHeader" character varying(50), "vendorId" character varying(50), "vehicleRegNo" character varying(50), "version" character varying(50) NOT NULL, "imei" character varying(50), "firmwareVersion" character varying(50), "protocolVersion" character varying(50), "device_type" character varying(50), "latitude" numeric(9,6), "longitude" numeric(9,6), "checksum" character varying(50), CONSTRAINT "PK_2d75db64eabbc70cfaba3fc5501" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "emergency_packet" ("id" SERIAL NOT NULL, "startCharacter" character varying(50), "packetHeader" character varying(50), "version" character varying(50), "vendorId" character varying(50), "messageType" character varying(50), "deviceId" character varying(50), "packetType" character varying(50), "date" character varying(50), "gps" character varying(50), "latitude" double precision, "latitudeDirection" character varying(50), "longitude" double precision, "longitudeDirection" character varying(50), "altitude" integer, "speed" integer, "distance" integer, "provider" character varying(50), "vehicleRegNo" character varying(50), "replyNumber" character varying(50), "checksum" character varying(50), "crc" character varying(50), CONSTRAINT "PK_995db2fff66d629f22f80dd7927" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "ecu_attributes" ("id" SERIAL NOT NULL, "attributeName" character varying(255) NOT NULL, "attributeValue" character varying(255) NOT NULL, "status" boolean NOT NULL, "isActive" boolean NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_8c8205994aee342ae515514749f" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "ecu_flash" ("id" SERIAL NOT NULL, "flash_file_name" character varying(128) NOT NULL, "flash_file_path" character varying(128) NOT NULL, "status" boolean NOT NULL DEFAULT true, CONSTRAINT "PK_54ed903d052fb009f610cf84fa6" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "device_history" ("id" SERIAL NOT NULL, "device_id" integer NOT NULL, "name" character varying(64) NOT NULL, "mac_address" character varying(17) NOT NULL, "updatedOn" TIMESTAMP NOT NULL DEFAULT now(), "dongle_id" integer, "user_id" integer, CONSTRAINT "PK_e7b12f40c596560b264d9cd68f5" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "dongle_history" ("id" SERIAL NOT NULL, "dongle_id" integer NOT NULL, "name" character varying(64) NOT NULL, "device_id" integer NOT NULL, "user_id" integer NOT NULL, CONSTRAINT "PK_9930b2ff4eafb6a084fed7609c9" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "banners" ("id" SERIAL NOT NULL, "product_name" character varying(255) NOT NULL, "product_tag" character varying(255) NOT NULL, "product_img" character varying(255) NOT NULL, "product_description" character varying NOT NULL, "product_link" character varying(512) NOT NULL, "rating" double precision NOT NULL, "priority" integer NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_e9b186b959296fcb940790d31c3" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "role_permission" ("permission_id" integer NOT NULL, "role_id" integer NOT NULL, CONSTRAINT "PK_19a94c31d4960ded0dcd0397759" PRIMARY KEY ("permission_id", "role_id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_e3a3ba47b7ca00fd23be4ebd6c" ON "role_permission" ("permission_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_3d0a7155eafd75ddba5a701336" ON "role_permission" ("role_id") `);
        await queryRunner.query(`CREATE TABLE "parameter_pid" ("parameter_id" integer NOT NULL, "pid_id" integer NOT NULL, CONSTRAINT "PK_99201a3bad517024f475b010527" PRIMARY KEY ("parameter_id", "pid_id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_6bd37757d1cd557bcbf985dd3e" ON "parameter_pid" ("parameter_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_f3cc4d1b98879c5f935bbe5257" ON "parameter_pid" ("pid_id") `);
        await queryRunner.query(`CREATE TABLE "pid_dataset_pid" ("pid_id" integer NOT NULL, "pid_dataset_id" integer NOT NULL, CONSTRAINT "PK_7eb1c36002764844403e2d8eb8a" PRIMARY KEY ("pid_id", "pid_dataset_id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_9eff1d7cfde8b0520f7f386336" ON "pid_dataset_pid" ("pid_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_42e3cc1aecf0dd92ae884bb6e2" ON "pid_dataset_pid" ("pid_dataset_id") `);
        await queryRunner.query(`CREATE TABLE "message_type_pid_dataset" ("message_type_id" integer NOT NULL, "pid_dataset_id" integer NOT NULL, CONSTRAINT "PK_c0ffa939b9fcc95116a7145b0f5" PRIMARY KEY ("message_type_id", "pid_dataset_id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_03da0196097403a22e19ac63e5" ON "message_type_pid_dataset" ("message_type_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_ca5c06787d05e2c4aab60413d3" ON "message_type_pid_dataset" ("pid_dataset_id") `);
        await queryRunner.query(`CREATE TABLE "ecu_pid_dataset" ("pid_dataset_id" integer NOT NULL, "ecu_id" integer NOT NULL, CONSTRAINT "PK_4f8929e7e61e6fd35c775e6ee2d" PRIMARY KEY ("pid_dataset_id", "ecu_id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_9642825b253339f1dd096c5e25" ON "ecu_pid_dataset" ("pid_dataset_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_f26846ba382cf13481c0686c08" ON "ecu_pid_dataset" ("ecu_id") `);
        await queryRunner.query(`CREATE TABLE "dtc_dataset_dtc" ("dtc_id" integer NOT NULL, "dtc_dataset_id" integer NOT NULL, CONSTRAINT "PK_bcaa1c4b225df346255b8041fee" PRIMARY KEY ("dtc_id", "dtc_dataset_id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_a919dc6e656af4d2493f9d6ab4" ON "dtc_dataset_dtc" ("dtc_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_93d2d1e10637543ea299dfc5c1" ON "dtc_dataset_dtc" ("dtc_dataset_id") `);
        await queryRunner.query(`CREATE TABLE "ecu_dtc_dataset" ("dtc_dataset_id" integer NOT NULL, "ecu_id" integer NOT NULL, CONSTRAINT "PK_86f6579985d2853698aa727b65d" PRIMARY KEY ("dtc_dataset_id", "ecu_id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_bc92530a3bb4ba6548f5ccbc87" ON "ecu_dtc_dataset" ("dtc_dataset_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_d19b1857794dac857a9e29b47d" ON "ecu_dtc_dataset" ("ecu_id") `);
        await queryRunner.query(`CREATE TABLE "ecu_neg" ("neg_id" integer NOT NULL, "ecu_id" integer NOT NULL, CONSTRAINT "PK_937b3359daa711df90c963e5f1d" PRIMARY KEY ("neg_id", "ecu_id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_1bf81b53a0a643f536e66755b6" ON "ecu_neg" ("neg_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_48c783f58fdae9de1ff18e4b84" ON "ecu_neg" ("ecu_id") `);
        await queryRunner.query(`CREATE TABLE "user_hierarchy" ("user_id" integer NOT NULL, "under_user_id" integer NOT NULL, CONSTRAINT "PK_1b8a740c5b0c5cfb2b321cf95c7" PRIMARY KEY ("user_id", "under_user_id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_aec31fe2f3988fd986f79fd559" ON "user_hierarchy" ("user_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_5afacadda6136f307d606d8d43" ON "user_hierarchy" ("under_user_id") `);
        await queryRunner.query(`ALTER TABLE "vehicle_sub_model" ADD CONSTRAINT "FK_18e85417c7bbaf1db261fd9cbc4" FOREIGN KEY ("vehicle_model_id") REFERENCES "vehicle_model"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "vehicle_sub_model" ADD CONSTRAINT "FK_1be98aa26a907334f4d63d6b4bf" FOREIGN KEY ("vehicle_version_id") REFERENCES "vehicle_version"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "vehicle_model" ADD CONSTRAINT "FK_7e1f018275fd8db5308687986b8" FOREIGN KEY ("oem_id") REFERENCES "oem"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "vehicle_model" ADD CONSTRAINT "FK_be9e7dc42d899d3dbfbea514ff4" FOREIGN KEY ("vehicle_version_id") REFERENCES "vehicle_version"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "vehicle_model" ADD CONSTRAINT "FK_bed31a4916e39fc2f1d132642dc" FOREIGN KEY ("vehicle_segment_id") REFERENCES "vehicle_segment"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "vehicle_parts_replacement" ADD CONSTRAINT "FK_f8d51b8046f1b7117684f11f326" FOREIGN KEY ("vehicle_id") REFERENCES "vehicle"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "vehicle" ADD CONSTRAINT "FK_d2f5c06191aab95d4549fc8a803" FOREIGN KEY ("vehicle_model_id") REFERENCES "vehicle_model"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "vehicle" ADD CONSTRAINT "FK_2c4475836273750ab1156df6e46" FOREIGN KEY ("vehicle_sub_id") REFERENCES "vehicle_sub_model"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "vehicle" ADD CONSTRAINT "FK_8fb5c23b8b5d8f596ac72ffd1c1" FOREIGN KEY ("vehicle_segment_id") REFERENCES "vehicle_segment"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "vehicle" ADD CONSTRAINT "FK_f03e0bda7a4744ff9edff67c710" FOREIGN KEY ("vehicle_version_id") REFERENCES "vehicle_version"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "vehicle" ADD CONSTRAINT "FK_8d0a971f2191e51336e203c748e" FOREIGN KEY ("vehicle_owner_id") REFERENCES "vehicle_owner"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "vehicle" ADD CONSTRAINT "FK_9665b30d49f838e2eff43f9abe0" FOREIGN KEY ("dealer_id") REFERENCES "dealer"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "vehicle_insurance" ADD CONSTRAINT "FK_683160da182ea8fce3238a0459d" FOREIGN KEY ("vehicle_id") REFERENCES "vehicle"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "device" ADD CONSTRAINT "FK_4e45895a2aec400786bb56ed0a9" FOREIGN KEY ("dongle_id") REFERENCES "dongle"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "device" ADD CONSTRAINT "FK_c0ab4ca240cd2b5148d0b1868e9" FOREIGN KEY ("assigned_to") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "role" ADD CONSTRAINT "FK_04a09925beea59e864e921db4a1" FOREIGN KEY ("created_by") REFERENCES "user"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "service_ticket" ADD CONSTRAINT "FK_158977193099c0625411d5d2082" FOREIGN KEY ("technician_id") REFERENCES "user"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "trip" ADD CONSTRAINT "FK_64c0a95b91a9b4c120a26d54b69" FOREIGN KEY ("user_id") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "ecu_management" ADD CONSTRAINT "FK_53b183abdc665d3ffb74833bdb1" FOREIGN KEY ("firmware_id") REFERENCES "firmware_management"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "file" ADD CONSTRAINT "FK_516f1cf15166fd07b732b4b6ab0" FOREIGN KEY ("user_id") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "file" ADD CONSTRAINT "FK_7f1b4e823d48a864ba999832ad2" FOREIGN KEY ("firmware_id") REFERENCES "firmware_management"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "firmware_management" ADD CONSTRAINT "FK_44360494c4dade73c6e08aa4ca7" FOREIGN KEY ("created_by") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user" ADD CONSTRAINT "FK_0232591a0b48e1eb92f3ec5d0d1" FOREIGN KEY ("device_id") REFERENCES "device"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "user" ADD CONSTRAINT "FK_fb2e442d14add3cefbdf33c4561" FOREIGN KEY ("role_id") REFERENCES "role"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "role_permission" ADD CONSTRAINT "FK_e3a3ba47b7ca00fd23be4ebd6cf" FOREIGN KEY ("permission_id") REFERENCES "permission"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "role_permission" ADD CONSTRAINT "FK_3d0a7155eafd75ddba5a7013368" FOREIGN KEY ("role_id") REFERENCES "role"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "parameter_pid" ADD CONSTRAINT "FK_6bd37757d1cd557bcbf985dd3e5" FOREIGN KEY ("parameter_id") REFERENCES "parameters"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "parameter_pid" ADD CONSTRAINT "FK_f3cc4d1b98879c5f935bbe52576" FOREIGN KEY ("pid_id") REFERENCES "pid"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "pid_dataset_pid" ADD CONSTRAINT "FK_9eff1d7cfde8b0520f7f3863365" FOREIGN KEY ("pid_id") REFERENCES "pid"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "pid_dataset_pid" ADD CONSTRAINT "FK_42e3cc1aecf0dd92ae884bb6e26" FOREIGN KEY ("pid_dataset_id") REFERENCES "pid_dataset"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "message_type_pid_dataset" ADD CONSTRAINT "FK_03da0196097403a22e19ac63e5f" FOREIGN KEY ("message_type_id") REFERENCES "message"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "message_type_pid_dataset" ADD CONSTRAINT "FK_ca5c06787d05e2c4aab60413d3c" FOREIGN KEY ("pid_dataset_id") REFERENCES "pid_dataset"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "ecu_pid_dataset" ADD CONSTRAINT "FK_9642825b253339f1dd096c5e257" FOREIGN KEY ("pid_dataset_id") REFERENCES "pid_dataset"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "ecu_pid_dataset" ADD CONSTRAINT "FK_f26846ba382cf13481c0686c08c" FOREIGN KEY ("ecu_id") REFERENCES "ecu_management"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "dtc_dataset_dtc" ADD CONSTRAINT "FK_a919dc6e656af4d2493f9d6ab4c" FOREIGN KEY ("dtc_id") REFERENCES "dtc"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "dtc_dataset_dtc" ADD CONSTRAINT "FK_93d2d1e10637543ea299dfc5c16" FOREIGN KEY ("dtc_dataset_id") REFERENCES "dtc_dataset"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "ecu_dtc_dataset" ADD CONSTRAINT "FK_bc92530a3bb4ba6548f5ccbc87c" FOREIGN KEY ("dtc_dataset_id") REFERENCES "dtc_dataset"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "ecu_dtc_dataset" ADD CONSTRAINT "FK_d19b1857794dac857a9e29b47d9" FOREIGN KEY ("ecu_id") REFERENCES "ecu_management"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "ecu_neg" ADD CONSTRAINT "FK_1bf81b53a0a643f536e66755b62" FOREIGN KEY ("neg_id") REFERENCES "negative_response_codes"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "ecu_neg" ADD CONSTRAINT "FK_48c783f58fdae9de1ff18e4b84a" FOREIGN KEY ("ecu_id") REFERENCES "ecu_management"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_hierarchy" ADD CONSTRAINT "FK_aec31fe2f3988fd986f79fd5593" FOREIGN KEY ("user_id") REFERENCES "user"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "user_hierarchy" ADD CONSTRAINT "FK_5afacadda6136f307d606d8d436" FOREIGN KEY ("under_user_id") REFERENCES "user"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "user_hierarchy" DROP CONSTRAINT "FK_5afacadda6136f307d606d8d436"`);
        await queryRunner.query(`ALTER TABLE "user_hierarchy" DROP CONSTRAINT "FK_aec31fe2f3988fd986f79fd5593"`);
        await queryRunner.query(`ALTER TABLE "ecu_neg" DROP CONSTRAINT "FK_48c783f58fdae9de1ff18e4b84a"`);
        await queryRunner.query(`ALTER TABLE "ecu_neg" DROP CONSTRAINT "FK_1bf81b53a0a643f536e66755b62"`);
        await queryRunner.query(`ALTER TABLE "ecu_dtc_dataset" DROP CONSTRAINT "FK_d19b1857794dac857a9e29b47d9"`);
        await queryRunner.query(`ALTER TABLE "ecu_dtc_dataset" DROP CONSTRAINT "FK_bc92530a3bb4ba6548f5ccbc87c"`);
        await queryRunner.query(`ALTER TABLE "dtc_dataset_dtc" DROP CONSTRAINT "FK_93d2d1e10637543ea299dfc5c16"`);
        await queryRunner.query(`ALTER TABLE "dtc_dataset_dtc" DROP CONSTRAINT "FK_a919dc6e656af4d2493f9d6ab4c"`);
        await queryRunner.query(`ALTER TABLE "ecu_pid_dataset" DROP CONSTRAINT "FK_f26846ba382cf13481c0686c08c"`);
        await queryRunner.query(`ALTER TABLE "ecu_pid_dataset" DROP CONSTRAINT "FK_9642825b253339f1dd096c5e257"`);
        await queryRunner.query(`ALTER TABLE "message_type_pid_dataset" DROP CONSTRAINT "FK_ca5c06787d05e2c4aab60413d3c"`);
        await queryRunner.query(`ALTER TABLE "message_type_pid_dataset" DROP CONSTRAINT "FK_03da0196097403a22e19ac63e5f"`);
        await queryRunner.query(`ALTER TABLE "pid_dataset_pid" DROP CONSTRAINT "FK_42e3cc1aecf0dd92ae884bb6e26"`);
        await queryRunner.query(`ALTER TABLE "pid_dataset_pid" DROP CONSTRAINT "FK_9eff1d7cfde8b0520f7f3863365"`);
        await queryRunner.query(`ALTER TABLE "parameter_pid" DROP CONSTRAINT "FK_f3cc4d1b98879c5f935bbe52576"`);
        await queryRunner.query(`ALTER TABLE "parameter_pid" DROP CONSTRAINT "FK_6bd37757d1cd557bcbf985dd3e5"`);
        await queryRunner.query(`ALTER TABLE "role_permission" DROP CONSTRAINT "FK_3d0a7155eafd75ddba5a7013368"`);
        await queryRunner.query(`ALTER TABLE "role_permission" DROP CONSTRAINT "FK_e3a3ba47b7ca00fd23be4ebd6cf"`);
        await queryRunner.query(`ALTER TABLE "user" DROP CONSTRAINT "FK_fb2e442d14add3cefbdf33c4561"`);
        await queryRunner.query(`ALTER TABLE "user" DROP CONSTRAINT "FK_0232591a0b48e1eb92f3ec5d0d1"`);
        await queryRunner.query(`ALTER TABLE "firmware_management" DROP CONSTRAINT "FK_44360494c4dade73c6e08aa4ca7"`);
        await queryRunner.query(`ALTER TABLE "file" DROP CONSTRAINT "FK_7f1b4e823d48a864ba999832ad2"`);
        await queryRunner.query(`ALTER TABLE "file" DROP CONSTRAINT "FK_516f1cf15166fd07b732b4b6ab0"`);
        await queryRunner.query(`ALTER TABLE "ecu_management" DROP CONSTRAINT "FK_53b183abdc665d3ffb74833bdb1"`);
        await queryRunner.query(`ALTER TABLE "trip" DROP CONSTRAINT "FK_64c0a95b91a9b4c120a26d54b69"`);
        await queryRunner.query(`ALTER TABLE "service_ticket" DROP CONSTRAINT "FK_158977193099c0625411d5d2082"`);
        await queryRunner.query(`ALTER TABLE "role" DROP CONSTRAINT "FK_04a09925beea59e864e921db4a1"`);
        await queryRunner.query(`ALTER TABLE "device" DROP CONSTRAINT "FK_c0ab4ca240cd2b5148d0b1868e9"`);
        await queryRunner.query(`ALTER TABLE "device" DROP CONSTRAINT "FK_4e45895a2aec400786bb56ed0a9"`);
        await queryRunner.query(`ALTER TABLE "vehicle_insurance" DROP CONSTRAINT "FK_683160da182ea8fce3238a0459d"`);
        await queryRunner.query(`ALTER TABLE "vehicle" DROP CONSTRAINT "FK_9665b30d49f838e2eff43f9abe0"`);
        await queryRunner.query(`ALTER TABLE "vehicle" DROP CONSTRAINT "FK_8d0a971f2191e51336e203c748e"`);
        await queryRunner.query(`ALTER TABLE "vehicle" DROP CONSTRAINT "FK_f03e0bda7a4744ff9edff67c710"`);
        await queryRunner.query(`ALTER TABLE "vehicle" DROP CONSTRAINT "FK_8fb5c23b8b5d8f596ac72ffd1c1"`);
        await queryRunner.query(`ALTER TABLE "vehicle" DROP CONSTRAINT "FK_2c4475836273750ab1156df6e46"`);
        await queryRunner.query(`ALTER TABLE "vehicle" DROP CONSTRAINT "FK_d2f5c06191aab95d4549fc8a803"`);
        await queryRunner.query(`ALTER TABLE "vehicle_parts_replacement" DROP CONSTRAINT "FK_f8d51b8046f1b7117684f11f326"`);
        await queryRunner.query(`ALTER TABLE "vehicle_model" DROP CONSTRAINT "FK_bed31a4916e39fc2f1d132642dc"`);
        await queryRunner.query(`ALTER TABLE "vehicle_model" DROP CONSTRAINT "FK_be9e7dc42d899d3dbfbea514ff4"`);
        await queryRunner.query(`ALTER TABLE "vehicle_model" DROP CONSTRAINT "FK_7e1f018275fd8db5308687986b8"`);
        await queryRunner.query(`ALTER TABLE "vehicle_sub_model" DROP CONSTRAINT "FK_1be98aa26a907334f4d63d6b4bf"`);
        await queryRunner.query(`ALTER TABLE "vehicle_sub_model" DROP CONSTRAINT "FK_18e85417c7bbaf1db261fd9cbc4"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_5afacadda6136f307d606d8d43"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_aec31fe2f3988fd986f79fd559"`);
        await queryRunner.query(`DROP TABLE "user_hierarchy"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_48c783f58fdae9de1ff18e4b84"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_1bf81b53a0a643f536e66755b6"`);
        await queryRunner.query(`DROP TABLE "ecu_neg"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_d19b1857794dac857a9e29b47d"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_bc92530a3bb4ba6548f5ccbc87"`);
        await queryRunner.query(`DROP TABLE "ecu_dtc_dataset"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_93d2d1e10637543ea299dfc5c1"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_a919dc6e656af4d2493f9d6ab4"`);
        await queryRunner.query(`DROP TABLE "dtc_dataset_dtc"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_f26846ba382cf13481c0686c08"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_9642825b253339f1dd096c5e25"`);
        await queryRunner.query(`DROP TABLE "ecu_pid_dataset"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_ca5c06787d05e2c4aab60413d3"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_03da0196097403a22e19ac63e5"`);
        await queryRunner.query(`DROP TABLE "message_type_pid_dataset"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_42e3cc1aecf0dd92ae884bb6e2"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_9eff1d7cfde8b0520f7f386336"`);
        await queryRunner.query(`DROP TABLE "pid_dataset_pid"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_f3cc4d1b98879c5f935bbe5257"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_6bd37757d1cd557bcbf985dd3e"`);
        await queryRunner.query(`DROP TABLE "parameter_pid"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_3d0a7155eafd75ddba5a701336"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_e3a3ba47b7ca00fd23be4ebd6c"`);
        await queryRunner.query(`DROP TABLE "role_permission"`);
        await queryRunner.query(`DROP TABLE "banners"`);
        await queryRunner.query(`DROP TABLE "dongle_history"`);
        await queryRunner.query(`DROP TABLE "device_history"`);
        await queryRunner.query(`DROP TABLE "ecu_flash"`);
        await queryRunner.query(`DROP TABLE "ecu_attributes"`);
        await queryRunner.query(`DROP TABLE "emergency_packet"`);
        await queryRunner.query(`DROP TABLE "login_packet"`);
        await queryRunner.query(`DROP TABLE "health_monitoring_packet"`);
        await queryRunner.query(`DROP TABLE "geofence"`);
        await queryRunner.query(`DROP TABLE "tracking_packet"`);
        await queryRunner.query(`DROP TABLE "user"`);
        await queryRunner.query(`DROP TABLE "firmware_management"`);
        await queryRunner.query(`DROP TYPE "public"."firmware_management_firmware_type_enum"`);
        await queryRunner.query(`DROP TABLE "file"`);
        await queryRunner.query(`DROP TYPE "public"."file_file_type_enum"`);
        await queryRunner.query(`DROP TABLE "ecu_management"`);
        await queryRunner.query(`DROP TABLE "negative_response_codes"`);
        await queryRunner.query(`DROP TABLE "dtc_dataset"`);
        await queryRunner.query(`DROP TABLE "dtc"`);
        await queryRunner.query(`DROP TABLE "pid_dataset"`);
        await queryRunner.query(`DROP TABLE "message"`);
        await queryRunner.query(`DROP TABLE "pid"`);
        await queryRunner.query(`DROP TABLE "parameters"`);
        await queryRunner.query(`DROP TABLE "trip"`);
        await queryRunner.query(`DROP TABLE "service_ticket"`);
        await queryRunner.query(`DROP TYPE "public"."service_ticket_status_enum"`);
        await queryRunner.query(`DROP TABLE "role"`);
        await queryRunner.query(`DROP TABLE "permission"`);
        await queryRunner.query(`DROP TYPE "public"."permission_type_enum"`);
        await queryRunner.query(`DROP TABLE "device"`);
        await queryRunner.query(`DROP TYPE "public"."device_status_enum"`);
        await queryRunner.query(`DROP TABLE "dongle"`);
        await queryRunner.query(`DROP TYPE "public"."dongle_status_enum"`);
        await queryRunner.query(`DROP TABLE "vehicle_insurance"`);
        await queryRunner.query(`DROP TABLE "vehicle"`);
        await queryRunner.query(`DROP TABLE "dealer"`);
        await queryRunner.query(`DROP TABLE "vehicle_parts_replacement"`);
        await queryRunner.query(`DROP TABLE "vehicle_owner"`);
        await queryRunner.query(`DROP TABLE "vehicle_model"`);
        await queryRunner.query(`DROP TABLE "vehicle_sub_model"`);
        await queryRunner.query(`DROP TABLE "vehicle_version"`);
        await queryRunner.query(`DROP TABLE "vehicle_segment"`);
        await queryRunner.query(`DROP TABLE "oem"`);
    }

}
